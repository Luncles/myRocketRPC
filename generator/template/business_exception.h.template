/****************************************************
 *
 * ****     ***     ****    *   *    *****    *****
 * *  *    *   *   *        ****     ***        *
 * *   *    ***     ****    *   *    *****      *
 *
 * ${FILE_NAME}
 * ${CREATE_TIME}
 * Generated by rocket framework rocket_generator.py
 * File will not generate while exist
 * Allow editing
****************************************************/


#ifndef ${HEADER_DEFINE}
#define ${HEADER_DEFINE} 




#include <string>
#include <memory>
#include <sstream>
#include <myRocketRPC/common/exception.h>
#include <myRocketRPC/common/log.h>


namespace ${PROJECT_NAME} {

class BusinessException : public myRocketRPC::RocketException {
 public:

  BusinessException(int code, const std::string& err_info, const std::string& file_name, int line):
      myRocketRPC::RocketException(code, err_info), m_file_name(file_name), m_line(line) {

    APPINFOLOG("[%s:%lld] throw BusinessException[code: %d, error info: %s]", file_name.c_str(), line, code, err_info.c_str());
  }

  ~BusinessException() {
  
  }

  void handle() override {
    
  }

  const char* what() {
    return myErrorInfo.c_str();
  }

  std::string file_name() {
    return m_file_name;
  }

  int line() {
    return m_line;
  }

 private:

  std::string m_file_name;

  int m_line {0};

};

}

#endif